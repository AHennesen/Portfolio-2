{"version":3,"sources":["components/CardPic/me.jpg","components/Carousel/abstract-q-c-450-400-6.jpg","components/CardPic/index.js","components/Dropdown/index.js","components/Carousel/index.js","components/SideCardPic/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CardPic","react_default","a","createElement","Card","Img","variant","src","Image","Body","Title","Text","Component","DropdownButton","Dropdown","Toggle","id","Menu","Item","href","SideCardPic","Container","Row","Col","xs","md","rounded","App","react_router_dom","basename","components_Dropdown","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0YCwBzBC,mLAhBP,OACRC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAKC,IAAN,CAAUC,QAAU,MAAMC,IAAOC,MACjCP,EAAAC,EAAAC,cAACC,EAAA,EAAKK,KAAN,KACER,EAAAC,EAAAC,cAACC,EAAA,EAAKM,MAAN,0CACAT,EAAAC,EAAAC,cAACC,EAAA,EAAKO,KAAN,gFAGAV,EAAAC,EAAAC,cAACC,EAAA,EAAKO,KAAN,yGAVkBC,sBCgBPC,0LAhBP,OACAZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAASC,OAAV,CAAiBT,QAAQ,QAAQU,GAAG,kBAApC,UAIAf,EAAAC,EAAAC,cAACW,EAAA,EAASG,KAAV,KACIhB,EAAAC,EAAAC,cAACW,EAAA,EAASI,KAAV,CAAeC,KAAK,KAApB,QACAlB,EAAAC,EAAAC,cAACW,EAAA,EAASI,KAAV,CAAeC,KAAK,cAApB,aACAlB,EAAAC,EAAAC,cAACW,EAAA,EAASI,KAAV,CAAeC,KAAK,cAApB,2BAXaP,mDCCLA,2CCyBTQ,0LAtBP,OACRnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KACIpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACIrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GAChBxB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOD,IAAI,sDAAsDmB,SAAO,MAI5EzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAKK,KAAN,KACIR,EAAAC,EAAAC,cAACC,EAAA,EAAKM,MAAN,mBACAT,EAAAC,EAAAC,cAACC,EAAA,EAAKO,KAAN,iHAbcC,cCaXe,MAXf,WACE,OACE1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAQC,SAAS,eACf5B,EAAAC,EAAAC,cAAC2B,EAAD,MACE7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAO,IAAIC,UAAalC,IACrCC,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAO,aAAaC,UAAad,MCDlCe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ddf7f812.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.6ee9a879.jpg\";","module.exports = __webpack_public_path__ + \"static/media/abstract-q-c-450-400-6.e4b13c72.jpg\";","import React, { Component } from \"react\";\nimport { Card } from 'react-bootstrap'\nimport './style.css'\nimport  Image from './me.jpg'\n\n\nclass CardPic extends Component {\n    render () {\n        return (\n<Card>\n  <Card.Img variant = 'top' src = {Image} />\n  <Card.Body>\n    <Card.Title>Hello, My name is Andrew Hennesen</Card.Title>\n    <Card.Text>\n      I am a new Full Stack Web Deleoper exited to make ideas into realities.\n    </Card.Text>\n    <Card.Text>\n      You can see my a collection of the projects that I have worked on in my portfolio page.\n    </Card.Text>\n  </Card.Body>\n</Card>\n        )\n    }};\n\nexport default CardPic;","import {Dropdown} from 'react-bootstrap'\r\nimport React, { Component } from \"react\";\r\nimport './style.css'\r\n\r\nclass DropdownButton extends Component {\r\n    render() {\r\n        return (\r\n        <Dropdown>\r\n            <Dropdown.Toggle variant=\"clear\" id=\"dropdown-basic\">\r\n                â‰¡\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n                <Dropdown.Item href=\"/\">Home</Dropdown.Item>\r\n                <Dropdown.Item href=\"/Portfolio\">Portfolio</Dropdown.Item>\r\n                <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n    </Dropdown>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropdownButton;","import React, { Component } from \"react\";\r\nimport './style.css'\r\nimport {Carousel} from 'react-bootstrap'\r\nimport placeholder from './abstract-q-c-450-400-6.jpg'\r\n\r\nclass Portfolio extends Component {\r\n    render () {\r\n        return (\r\n            <Carousel>\r\n                <Carousel.Item>\r\n                    <img\r\n                    className=\"d-block w-100\"\r\n                    src={placeholder}\r\n                    alt=\"First slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                    <h3>First slide label</h3>\r\n                    <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item>\r\n                    <img\r\n                    className=\"d-block w-100\"\r\n                    src=\"holder.js/800x400?text=Second slide&bg=282c34\"\r\n                    alt=\"Third slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                    <h3>Second slide label</h3>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n                <Carousel.Item>\r\n                    <img\r\n                    className=\"d-block w-100\"\r\n                    src=\"holder.js/800x400?text=Third slide&bg=20232a\"\r\n                    alt=\"Third slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                    <h3>Third slide label</h3>\r\n                    <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n\r\n            </Carousel>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Portfolio;","import React, { Component } from \"react\";\r\nimport { Card, Container, Row } from 'react-bootstrap';\r\nimport {Image, Col} from 'react-bootstrap';\r\nimport './style.css';\r\n\r\n\r\nclass SideCardPic extends Component {\r\n    render () {\r\n        return (\r\n<Container>\r\n    <Row>\r\n        <Col xs={3} md={2}>\r\n        <Image src=\"http://lorempixel.com/output/city-q-g-300-200-9.jpg\" rounded />\r\n        </Col>\r\n    </Row>\r\n    \r\n    <Card>\r\n        <Card.Body>\r\n            <Card.Title>Card Title</Card.Title>\r\n            <Card.Text>\r\n            Some quick example text to build on the card title and make up the bulk of\r\n            the card's content.\r\n            </Card.Text>\r\n        </Card.Body>\r\n    </Card>\r\n</Container>\r\n    )\r\n    }\r\n}\r\n\r\nexport default SideCardPic;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport CardPic from './components/CardPic';\nimport DropdownButton from './components/Dropdown'\nimport Portfolio from './components/Carousel';\nimport SideCardPic from './components/SideCardPic'\n\nfunction App() {\n  return (\n    <Router basename='portfolio-2'>\n      <DropdownButton/>\n        <Route exact path = '/' component = {CardPic} />\n        <Route exact path = '/Portfolio' component = {SideCardPic} />\n    </Router>\n  );\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}