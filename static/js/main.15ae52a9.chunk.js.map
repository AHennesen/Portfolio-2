{"version":3,"sources":["components/CardPic/me.jpg","components/SideCardPic/Images/onBoard.gif","components/SideCardPic/Images/movie-this.png","components/SideCardPic/Images/ClickGame.gif","components/SideCardPic/Images/HackerNews.gif","components/CardPic/index.js","components/Dropdown/index.js","components/SideCardPic/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CardPic","react_default","a","createElement","Card","Img","variant","src","Image","Body","Title","Text","Component","DropdownButton","Dropdown","Toggle","id","Menu","Item","react_router_dom","to","Portfolio","class","Jumbotron","fluid","Container","liriPic","width","rounded","href","target","rel","artGif","hackerNews","onBoard","App","basename","components_Dropdown","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15ae52a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.6ee9a879.jpg\";","module.exports = __webpack_public_path__ + \"static/media/onBoard.8963526b.gif\";","module.exports = __webpack_public_path__ + \"static/media/movie-this.ad64c824.png\";","module.exports = __webpack_public_path__ + \"static/media/ClickGame.1fe06e40.gif\";","module.exports = __webpack_public_path__ + \"static/media/HackerNews.752fca66.gif\";","import React, { Component } from \"react\";\nimport { Card } from 'react-bootstrap';\nimport './style.css';\nimport  Image from './me.jpg';\n\n\nclass CardPic extends Component {\n    render () {\n        return (\n<Card>\n  <Card.Img variant = 'top' src = {Image} />\n  <Card.Body>\n    <Card.Title>Hello, My name is Andrew Hennesen</Card.Title>\n    <Card.Text>\n      I am a new Full Stack Web Deleoper exited to make ideas into realities.\n    </Card.Text>\n    <Card.Text>\n      You can see my a collection of the projects that I have worked on in my portfolio page.\n    </Card.Text>\n  </Card.Body>\n</Card>\n        )\n    }};\n\nexport default CardPic;","import {Dropdown} from 'react-bootstrap'\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './style.css'\r\n\r\nclass DropdownButton extends Component {\r\n    render() {\r\n        return (\r\n        <Dropdown>\r\n            <Dropdown.Toggle variant=\"clear\" id=\"dropdown-basic\">\r\n                â‰¡\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n                <Dropdown.Item><Link to=\"/\">Home</Link></Dropdown.Item>\r\n                <Dropdown.Item> <Link to=\"/Portfolio\">Portfolio</Link> </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n    </Dropdown>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropdownButton;","import React, { Component } from \"react\";\r\nimport {Image} from 'react-bootstrap';\r\nimport { Jumbotron, Container } from 'react-bootstrap';\r\nimport './style.css';\r\nimport onBoard from './Images/onBoard.gif';\r\nimport liriPic from './Images/movie-this.png';\r\nimport artGif from './Images/ClickGame.gif';\r\nimport hackerNews from './Images/HackerNews.gif';\r\n\r\nclass Portfolio extends Component {\r\n    render () {\r\n        return (\r\n    <section class = 'container' id = 'portfolio'>\r\n        <Jumbotron fluid>\r\n            <Container>\r\n                <h1>Portfolio</h1>\r\n                <p>\r\n                This is just a small collection of projects that I would like to share with you.\r\n                </p>\r\n                </Container>\r\n        </Jumbotron>\r\n        {/* Liri bot app */}\r\n        <div class = 'row mb-80'>\r\n            <div class = 'col-sm-6'>\r\n                <Image src= {liriPic} width='90%' rounded/>\r\n            </div>\r\n            <div class = 'col-sm-6'>\r\n                <h4 class = 'mt-60'>Liri-Bot</h4>\r\n                <p>A text based version of SIRI that takes in commands through the use of specific keywords.  Liri-Bot is a command-line interface Node.js app that searches different APIs and returns tour dates for bands, details about songs, and information about movies.</p>\r\n                <a href = 'https://github.com/AHennesen/liri-node-app' class = 'btn btn-default' target = '_blank' rel = 'noopener noreferrer'>Visit the repository</a>\r\n            </div>\r\n        </div>\r\n\r\n        {/* ReactClickGame */}\r\n        <div class=\"row mb-80\">\t\r\n\t\t\t<div class=\"col-sm-6 descrip-left\">\r\n\t\t\t\t<h4 class=\"mt-60\">Know Your Art</h4>\r\n\t\t\t\t<p>Know Your Art is a react based memory game that revolves around famous art. The user must click eact painting only once per round. Once all the paintings have been clicked the user wins.</p>\r\n                <p>This project was made useing: HTML5, CSS3, React, Axios, and Bootstrap. </p>\r\n\t\t\t\t<a href=\"https://ahennesen.github.io/ReactClickGame/\" class=\"btn btn-default\" target=\"_blank\" rel = 'noopener noreferrer'>Give it a try</a>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"col-sm-6\">\r\n\t\t\t\t<Image src= {artGif} width=\"90%\" rounded/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n        {/* HackerNews Scrapper */}\r\n        <div class = 'row mb-80'>\r\n            <div class = 'col-sm-6'>\r\n                <Image src= {hackerNews} width='90%' rounded/>\r\n            </div>\r\n            <div class = 'col-sm-6'>\r\n                <h4 class = 'mt-60'>Hacker News Scrapper</h4>\r\n                <p>A website that searches for the top stories from news.ycombinator and brings them up in a list.  Users can then comment on and save articles they would like to look at again later.</p>\r\n                <p>This project was made useing: HTML5, CSS3, AJAX, Axios, and Cheerio. </p>\r\n                <a href = 'https://cryptic-oasis-79349.herokuapp.com/' class = 'btn btn-default' target = '_blank' rel = 'noopener noreferrer'>Visit the website</a>\r\n            </div>\r\n        </div>\r\n\r\n        {/* onBoard */}\r\n        <div class=\"row mb-80\">\t\r\n\t\t\t<div class=\"col-sm-6 descrip-left\">\r\n\t\t\t\t<h4 class=\"mt-60\">onBoard</h4>\r\n\t\t\t\t<p>onBoard is a web based app that allows people to both find and create pick-up games for all their favorite board games.  Users must make an account and from there they can choose to join another players game that is already schedule or make their own if they would prefer.</p>\r\n                <p>This project was made useing: HTML5, CSS3, React, Redux,  Axios, and Bootstrap. </p>\r\n\t\t\t\t<a href=\"https://floating-wave-65456.herokuapp.com/\" class=\"btn btn-default\" target=\"_blank\" rel = 'noopener noreferrer'>Visit the Site</a>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"col-sm-6\">\r\n\t\t\t\t<Image src = {onBoard} width=\"90%\" rounded/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\r\n        </section>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Portfolio;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport CardPic from './components/CardPic';\nimport DropdownButton from './components/Dropdown';\nimport Portfolio from './components/SideCardPic';\n\nfunction App() {\n  return (\n    <Router basename='Portfolio-2'>\n      <DropdownButton/>\n        <Switch>\n          <Route exact path = '/' component={CardPic} />\n          <Route exact path = '/landing' component={CardPic} />\n          <Route exact path = '/Portfolio' component={Portfolio} />\n        </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}